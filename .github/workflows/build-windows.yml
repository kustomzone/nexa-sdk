name: NexaCLI on Windows

env:
  BACKENDS: "dml,cuda"

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-cli:
    name: windows_${{ matrix.arch }}_${{ matrix.backend }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        backend: [dml, cuda]
        include:
          - runner: sdk-windows-8-core-2
            arch: x86_64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect Tag Version
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "VERSION=${{ github.ref_name }}" >> $env:GITHUB_ENV

      - name: Detect Commit Hash
        if: github.event_name == 'workflow_dispatch'
        run: |
          $shortHash = "${{ github.sha }}".Substring(0, 7)
          echo "VERSION=$shortHash" >> $env:GITHUB_ENV

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.3
          cache-dependency-path: runner/go.sum

      - name: Setup MinGW
        run: |
          choco install mingw -y
          g++ --version

      - name: Download runtime
        run: |
          cd runner
          make download ARCH=${{ matrix.arch }}

      - name: Remove other backend plugins
        shell: pwsh
        run: |
          cd runner/build
          $backends = "${{ env.BACKENDS }}" -split ","
          $currentBackend = "${{ matrix.backend }}"
          
          foreach ($backend in $backends) {
            if ($backend -ne $currentBackend) {
              $pattern = "*_${backend}*"
              Get-ChildItem -Directory -Name $pattern | ForEach-Object {
                Write-Host "Removing $_ (backend: $backend)"
                Remove-Item $_ -Recurse -Force
              }
            }
          }

      - name: Build Nexa Cli
        run: |
          cd runner
          make build ARCH=${{ matrix.arch }}
          Remove-Item build/ml.h

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.backend == 'dml' && format('nexa-cli_windows_{0}', matrix.arch) || format('nexa-cli_windows_{0}_{1}', matrix.arch, matrix.backend) }}
          path: runner/build
          include-hidden-files: true

  build-installer:
    name: Build Windows Installer & Release (${{ matrix.backend }})
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: build-cli
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        backend: [dml, cuda]
        include:
          - runner: sdk-windows-8-core-2
            arch: x86_64
    env:
      VERSION: ${{ github.ref_name }}
      ARCH: ${{ matrix.arch }}
      BACKEND: ${{ matrix.backend }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.backend == 'dml' && format('nexa-cli_windows_{0}', matrix.arch) || format('nexa-cli_windows_{0}_{1}', matrix.arch, matrix.backend) }}
          path: artifacts

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          pip install pyinstaller

      - name: Build launcher with PyInstaller
        run: |
          $launcherName = if ("${{ matrix.backend }}" -eq "dml") { "nexa-cli-launcher" } else { "nexa-cli-launcher-${{ matrix.backend }}" }
          pyinstaller --onefile --noconsole --distpath artifacts --name $launcherName --icon="runner/release/windows/nexa_logo.ico" runner/release/windows/nexa_launcher.py

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: 8.0.403

      - name: Sign executables with AzureSignTool
        shell: pwsh
        run: |
          dotnet tool install --global AzureSignTool

          Get-ChildItem -Path "artifacts" -Recurse -Include *.exe, *.dll | ForEach-Object {
            azuresigntool sign `
              -kvu "${{ secrets.AZURE_KEY_VAULT_URI }}" `
              -kvc "${{ secrets.AZURE_CERT_NAME }}" `
              -kvi "${{ secrets.AZURE_CLIENT_ID }}" `
              -kvs "${{ secrets.AZURE_CLIENT_SECRET }}" `
              --azure-key-vault-tenant-id "${{ secrets.AZURE_TENANT_ID }}" `
              -tr http://timestamp.globalsign.com/tsa/advanced `
              -td sha256 `
              $_.FullName
          }

          $launcherName = if ("${{ matrix.backend }}" -eq "dml") { "nexa-cli-launcher.exe" } else { "nexa-cli-launcher-${{ matrix.backend }}.exe" }
          azuresigntool sign `
            -kvu "${{ secrets.AZURE_KEY_VAULT_URI }}" `
            -kvc "${{ secrets.AZURE_CERT_NAME }}" `
            -kvi "${{ secrets.AZURE_CLIENT_ID }}" `
            -kvs "${{ secrets.AZURE_CLIENT_SECRET }}" `
            --azure-key-vault-tenant-id "${{ secrets.AZURE_TENANT_ID }}" `
            -tr http://timestamp.globalsign.com/tsa/advanced `
            -td sha256 `
            "artifacts\$launcherName"

      - name: Compile Installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.6
        with:
          path: runner/release/windows/nexa_installer.iss
          options: /O+

      - name: Sign Installer
        shell: pwsh
        run: |
          azuresigntool sign `
            -kvu "${{ secrets.AZURE_KEY_VAULT_URI }}" `
            -kvc "${{ secrets.AZURE_CERT_NAME }}" `
            -kvi "${{ secrets.AZURE_CLIENT_ID }}" `
            -kvs "${{ secrets.AZURE_CLIENT_SECRET }}" `
            --azure-key-vault-tenant-id "${{ secrets.AZURE_TENANT_ID }}" `
            -tr http://timestamp.globalsign.com/tsa/advanced `
            -td sha256 `
            "artifacts/$(if ("${{ matrix.backend }}" -eq "dml") { "nexa-cli_windows_${{ matrix.arch }}.exe" } else { "nexa-cli_windows_${{ matrix.arch }}_${{ matrix.backend }}.exe" })"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          repository: NexaAI/nexa-sdk
          tag_name: ${{ env.VERSION }}
          files: artifacts/${{ matrix.backend == 'dml' && format('nexa-cli_windows_{0}.exe', matrix.arch) || format('nexa-cli_windows_{0}_{1}.exe', matrix.arch, matrix.backend) }}
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.ZACK_ACCESS_TOKEN }}
